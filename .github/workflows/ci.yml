name: PHP → GitHub Pages (static UI + external API)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer
      - name: Install deps
        run: composer install --prefer-dist --no-interaction
      - name: Run tests
        run: vendor/bin/phpunit --display-warnings

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"

      - name: Build static site for Pages
        env:
          API_BASE_URL: ${{ vars.API_BASE_URL }}   # p.ej. https://tu-dominio.com
        run: |
          mkdir -p dist
          php public/index.php > dist/index.html
          rsync -av --exclude='*.php' public/ dist/

          # Inyecta window.API_BASE en el HTML (si definiste la variable del repo)
          if [ -n "$API_BASE_URL" ]; then
            awk -v inj="<script>window.API_BASE='${API_BASE_URL}';</script>" \
                '{print} /<head>/ && !x {print inj; x=1}' dist/index.html > dist/.tmp && mv dist/.tmp dist/index.html
          fi

      - name: Upload artifact (only once)
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
